name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

defaults:
  run:
    shell: bash

jobs:
  static-analysis:
    name: Static analysis

    runs-on: ubuntu-latest

    steps:
      - name: Install
        run: |
          sudo apt update
          sudo apt install cppcheck

      - name: Clone
        uses: actions/checkout@v4

      - name: cppcheck
        run: cppcheck --std=c++17 src/

  code-format:
    name: Code format check

    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Show clang-format version
        run: |
          clang-format --version

      - name: clang-format
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            echo "Showing PR labels..."
            gh pr view ${{ github.event.pull_request.number }} --repo "${{ github.repository }}" --json labels
            echo "Checking labels on PR..."
            if gh pr view ${{ github.event.pull_request.number }} --repo "${{ github.repository }}" --json labels --jq '.labels[].name' | grep -q "skip-formatting"; then
              echo "skip-formatting label found - do not raise error"
              echo "==============================="
              find src -type f \( -name \*.cc -o -name \*.h \) | xargs clang-format --dry-run
              exit 0
            fi
            echo "skip-formatting label not found - raise error if formatting is not correct"
          else
            echo "Not a PR, do not check labels"
          fi

          find src -type f \( -name \*.cc -o -name \*.h \) | xargs clang-format --dry-run --Werror

          echo "Code is formatted correctly"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  android:
    name: Android

    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: gradle

      - name: Cache cmake build
        uses: actions/cache@v4
        with:
          path: os/android/app/.cxx
          key: android-cmake-v100

      - name: Setup signing config
        if: env.KEYSTORE_FILE_BASE64 != '' && env.KEYSTORE_PROPERTIES_FILE_BASE64 != ''
        run: |
          cd os/android
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > debug.keystore
          echo "$KEYSTORE_PROPERTIES_FILE_BASE64" | base64 --decode > debug-keystore.properties
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.ANDROID_DEBUG_KEYSTORE_FILE_BASE64 }}
          KEYSTORE_PROPERTIES_FILE_BASE64: ${{ secrets.ANDROID_DEBUG_KEYSTORE_PROPERTIES_FILE_BASE64 }}

      - name: Build
        run: |
          cd os/android
          ./gradlew assembleDebug

      - name: Change apk file name
        run: |
          mv os/android/app/build/outputs/apk/debug/app-debug.apk os/android/app/build/outputs/apk/debug/fallout2-ce.apk

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce-debug.apk
          path: os/android/app/build/outputs/apk/debug/fallout2-ce.apk
          retention-days: 7

  ios:
    name: iOS

    runs-on: macos-14

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Cache cmake build
        uses: actions/cache@v4
        with:
          path: out
          key: ios-cmake-v100

      - name: Configure
        run: |
          cmake --preset ios

      - name: Build
        run: |
          cmake --build --preset ios-debug

      - name: Pack
        run: |
          cd out/build/ios
          cpack -C Debug

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce.ipa
          path:  out/build/ios/fallout2-ce.ipa
          retention-days: 7

  linux:
    name: Linux (${{ matrix.arch }})

    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86
          - x64

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Dependencies (x86)
        if: matrix.arch == 'x86'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install g++-multilib libsdl2-dev:i386 zlib1g-dev:i386

      - name: Dependencies (x64)
        if: matrix.arch == 'x64'
        run: |
          sudo apt update
          sudo apt install libsdl2-dev zlib1g-dev

      - name: Cache cmake build
        uses: actions/cache@v4
        with:
          path: out
          key: linux-${{ matrix.arch }}-cmake-v100

      - name: Configure
        run: |
          cmake --preset linux-${{ matrix.arch }}-debug

      - name: Build
        run: |
          cmake --build --preset linux-${{ matrix.arch }}-debug

      - name: Change executable file name
        run: |
          mv out/build/linux-${{ matrix.arch }}-debug/fallout2-ce out/build/linux-${{ matrix.arch }}-debug/fallout2-ce-linux-${{ matrix.arch }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce-linux-${{ matrix.arch }}
          path:  out/build/linux-${{ matrix.arch }}-debug/fallout2-ce-linux-${{ matrix.arch }}
          retention-days: 7

  linux-armhf:
    name: Linux (armhf)

    runs-on: ubuntu-22.04-arm

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Dependencies
        run: |
          sudo dpkg --add-architecture armhf
          sudo apt update
          sudo apt install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libsdl2-dev:armhf zlib1g-dev:armhf

      - name: Configure
        run: |
          cmake \
            -B build \
            -D CMAKE_BUILD_TYPE=Debug \
            -D FALLOUT_VENDORED=OFF \
            -D CMAKE_SYSTEM_PROCESSOR=arm \
            -D CMAKE_C_COMPILER=arm-linux-gnueabihf-gcc \
            -D CMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ \
            # EOL

      - name: Build
        run: cmake --build build

      - name: Change executable file name
        run: |
          mv build/fallout2-ce build/fallout2-ce-linux-armhf

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce-linux-armhf
          path:  build/fallout2-ce-linux-armhf
          retention-days: 7

  linux-arm64:
    name: Linux (arm64)

    runs-on: ubuntu-22.04-arm

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Dependencies
        run: |
          sudo apt update
          sudo apt install libsdl2-dev zlib1g-dev

      - name: Configure
        run: cmake -B build -D CMAKE_BUILD_TYPE=Debug -D FALLOUT_VENDORED=OFF

      - name: Build
        run: cmake --build build

      - name: Change executable file name
        run: |
          mv build/fallout2-ce build/fallout2-ce-linux-arm64

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce-linux-arm64
          path:  build/fallout2-ce-linux-arm64
          retention-days: 7

  macos:
    name: macOS

    runs-on: macos-14

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Cache cmake build
        uses: actions/cache@v4
        with:
          path: out
          key: macos-cmake-v100

      - name: Configure
        run: |
          cmake --preset macos

      - name: Build
        run: |
          cmake --build --preset macos-debug

      - name: Pack
        run: |
          cd out/build/macos
          cpack -C Debug

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce-macos.dmg
          path: out/build/macos/Fallout II Community Edition.dmg
          retention-days: 7

  windows:
    name: Windows (${{ matrix.arch }})

      runs-on: windows-2022
      strategy:
        matrix:
          arch: [x86, x64]
          include:
            - arch: x86
              platform: Win32
              vc_arch: x86_xp
            - arch: x64
              platform: x64
              vc_arch: x64_xp
  
      steps:
      - name: Clean workspace
        shell: cmd
        run: |
          rmdir /s /q out build CMakeCache.txt 2>nul || true
  
      - uses: actions/checkout@v4
  
      - name: Install VS2019 Build Tools
        shell: pwsh
        run: |
          choco install visualstudio2019buildtools -y --force `
            --package-parameters="'--add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.VC.v141.xp'"
  
      - name: Find Visual Studio
        id: find_vs
        shell: pwsh
        run: |
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          echo "vsPath=$vsPath" >> $env:GITHUB_OUTPUT
  
      - name: Configure
        shell: cmd
        run: |
          call "${{ steps.find_vs.outputs.vsPath }}\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.vc_arch }}
          cmake -S . -B build -G "Visual Studio 16 2019" -A ${{ matrix.platform }} ^
            -T v141_xp ^
            -D CMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug>
  
      - name: Build
        shell: cmd
        run: |
          call "${{ steps.find_vs.outputs.vsPath }}\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.vc_arch }}
          cmake --build build --config Release

      - name: Change executable file name
        run: |
          mv out/build/windows-${{ matrix.arch }}/RelWithDebInfo/fallout2-ce.exe out/build/windows-${{ matrix.arch }}/RelWithDebInfo/fallout2-ce-${{ matrix.arch }}.exe

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: fallout2-ce-windows-${{ matrix.arch }}
          path:  out/build/windows-${{ matrix.arch }}/RelWithDebInfo/fallout2-ce-${{ matrix.arch }}.exe
          retention-days: 7


  release:
    name: Release Continuous build
    runs-on: ubuntu-latest
    needs: [android, ios, linux, linux-armhf, linux-arm64, macos, windows]
    permissions: write-all
    steps:
      - name: Fetch artifacts
        if: ${{ always() && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: actions/download-artifact@v4.1.7
        with:
          path: artifacts/

      - name: Remove old release
        if: ${{ always() && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: continious
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move unpacked artifacts to root folder
        if: ${{ always() && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: |
          ls -Rlah .
          find .
          cd artifacts/
          for folder in *; do
            if [[ -d "$folder" && "$folder" != "." ]]; then
              echo "Processing $folder"
              mv "$folder" "$folder.dir"
              cd "$folder.dir"
              for file in *; do
                if [ -f "$file" ]; then
                  if [ -f "../$file" ]; then
                    echo "ERROR: Duplicate artifact file name $file"
                    exit 1
                  fi
                  if [ -d "../$file" ]; then
                    echo "ERROR: Duplicate artifact folder $file"
                    exit 1
                  fi

                  echo "Moving $file"
                  mv "$file" "../$file"
                fi
              done
              cd ..
              rm -rf "$folder.dir"
            fi
          done
          ls -Rlah .
          find .
          cd ../

      - name: Allow GitHub to process removed release for few seconds
        if: ${{ always() && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: |
          sleep 20s

      - name: Upload new release
        if: ${{ always() && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: artifacts/*
          tag_name: continious
          draft: false
          prerelease: true
          name: Fallout2-CE Continuous Build
